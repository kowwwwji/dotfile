[core]
  editor = nvim
[ghq]
  root = ~/.ghq
[user]
  name = Koji Sakamoto
  email = kowwwwji@gmail.com
[alias]
# 基本コマンド
  st = status
  cm = commit
  cma = commit --amend
  co = checkout
  b = branch 
  cb = checkout -b
  bv = branch -vv
  bva = branch -vva
  see = browse
  st = status
  ls = log --stat
# 複合コマンド
  delete-merged-branches = !git branch --merged | grep -vE '^\\*|master$|develop$' | xargs -I % git branch -d %
  graph = log --graph --date-order -C -M --pretty=format:\"<%h> %ad [%an] %Cgreen%d%Creset %s\" --all --date=short

# WIPブランチを作成してPRを作成する 
  start = !"f () {\
    NEW_BRANCH=$1;\
    BASE_BRANCH=`git rev-parse --abbrev-ref @`;\
    if [ -z $1  ]; then\
      git branch;\
      read -p 'What is Base Branch Name?' bb;\
      NEW_BRANCH=$BASE_BRANCH;\
      BASE_BRANCH=$bb;\
    fi;\
    read -p 'You Make Base Branch:'$BASE_BRANCH' -> New Branch:'$NEW_BRANCH'? (y/n) ' yn;\
    case $yn in\
      [yY]* ) echo 'OK! Lets Start!!';;\
      * ) exit 1;;\
    esac;\
    git checkout -b $1;\
    git commit --allow-empty -m $1;\
    git push -u origin $1;\
    hub pull-request --draft -b $BASE_BRANCH;\
  }; f"
# 作業終了後、作成したPRを表示する
  # hub browse して画面上でPRをクリックする。
# Merge後、ローカルとリモートブランチをあわせる
  refresh = !"f () { \
    git checkout master; \
    git pull -p; \
    git delete-merged-branches; \
    git branch -avv; \
  }; f"

[merge]
  ff = false
[pull]
  ff = only
[color]
  ui = true
