# ヘルプ日本語化
  [[plugins]]
  repo = 'vim-jp/vimdoc-ja'

# パッケージマネージャ
  [[plugins]]
  repo = 'Shougo/dein.vim'

# 非同期処理のため
  [[plugins]]
  repo = 'Shougo/vimproc.vim'
  build = 'make'

# 統合インターフェース関連
  [[plugins]]
  repo = 'Shougo/neomru.vim'
  on_path = '.*'
  
  [[plugins]]
  repo = 'Shougo/unite.vim'
  depends = 'neomru.vim'

#  [[plugins]]
#  repo = 'Shougo/denite.nvim'
#  hook_add = '''
#    source ~/.config/nvim/plugins/denite.vim 
#  '''
  
# ファイラー
  [[plugins]]
  repo = 'Shougo/vimfiler.vim'

# 選択したコードを実行できる
  [[plugins]]
  repo = 'thinca/vim-quickrun'

  [[plugins]]
  repo = 'editorconfig/editorconfig-vim'
  
  [[plugins]]
  repo = 'majutsushi/tagbar'
  
  [[plugins]]
  repo = 'vim-airline/vim-airline'
  hook_add = '''
    set laststatus=2
    let g:airline_powerline_fonts = 1
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#buffer_idx_mode = 1
    let g:airline#extensions#whitespace#mixed_indent_algo = 1
  '''
  [[plugins]]
  repo = 'vim-airline/vim-airline-themes'
  hook_add = '''
  '''

# 補完機能
  [[plugins]]
  repo = 'Shougo/context_filetype.vim'

  [[plugins]]
  repo = 'roxma/nvim-yarp'

  [[plugins]]
  repo = 'roxma/vim-hug-neovim-rpc'

  [[plugins]]
  repo = 'neoclide/coc.nvim'
  rev = 'release'
  on_event = 'InsertEnter'
  merged = '0'

# 非同期コードチェッカー
  [[plugins]]
  repo = 'w0rp/ale'
  hook_source = '''
    let g:ale_fixers = {
    \   'ruby': ['rubocop'],
    \}
    "" 保存時に自動修正されるようにする
    "" let g:ale_fix_on_save = 1
  '''
  hook_add = '''
    let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '']
    let g:ale_echo_msg_format = '[%linter%] %s'
    nmap <silent> <C-k> <Plug>(ale_previous_wrap)
    nmap <silent> <C-j> <Plug>(ale_next_wrap)
  '''

# カッコ系
  [[plugins]]
  repo = 'tpope/vim-endwise'
  [[plugins]]
  repo = 'tpope/vim-surround'
  [[plugins]]
  repo = 'cohama/lexima.vim'

# テーブル系
  [[plugins]]
  repo = 'godlygeek/tabular'
  [[plugins]]
  repo = 'dhruvasagar/vim-table-mode'

# Syntax checker
  # [[plugins]]
  # repo = 'scrooloose/syntastic'
  # hook_add = '''
  #   set statusline+=%#warningmsg#
  #   set statusline+=%{SyntasticStatuslineFlag()}
  #   set statusline+=%*
  #   let g:syntastic_always_populate_loc_list = 1
  #   let g:syntastic_auto_loc_list = 1
  #   let g:syntastic_check_on_open = 1
  #   let g:syntastic_check_on_wq = 0
  #   let g:syntastic_ruby_checkers=['rubocop', 'mri']
  # '''

# Syntax HighLight
  [[plugins]]
  repo = 'cespare/vim-toml'
  on_ft = 'toml'

  [[plugins]]
  repo = 'posva/vim-vue'
  on_ft = 'vue'

  [[plugins]]
  repo = 'elzr/vim-json'
  on_ft = ['json']

  [[plugins]]
  repo = 'tmux-plugins/vim-tmux'
  on_ft = ['tmux']

# Markdown用
  [[plugins]]
  repo = 'tyru/open-browser.vim'
  hook_add = '''
    let g:netrw_nogx = 1
    augroup OpenBrowserSettings
      nmap gx <Plug>(openbrowser-smart-search)
      vmap gx <Plug>(openbrowser-smart-search)
    augroup END
  '''

  [[plugins]]
  repo = 'previm/previm'
  on_cmd = 'PrevimOpen'
  depends = 'open-browser.vim'
  hook_add = '''
    let g:previm_open_cmd = 'open -a Google\ Chrome'
    autocmd!
    autocmd BufNewFile,BufRead *.md set filetype=markdown
    let g:vim_markdown_folding_disabled = 1
    let g:previm_enable_realtime = 1
  '''

  [[plugins]]
  repo = 'plasticboy/vim-markdown'
  hook_add = '''
    " 折りたたみOFF
    let g:vim_markdown_folding_disabled = 1
    " 以下2つは問題が出るためON
    " https://github.com/plasticboy/vim-markdown#do-not-automatically-insert-bulletpoints
    let g:vim_markdown_auto_insert_bullets = 0
    let g:vim_markdown_new_list_item_indent = 0
  '''

# 移動
  [[plugins]]
  repo = 'easymotion/vim-easymotion'

# IDEみたいにするために
  [[plugins]]
  repo = 'scrooloose/nerdtree'
  hook_add = '''
    let NERDTreeShowHidden=1
    nnoremap <silent><C-e> :NERDTreeToggle<CR>

    "引数なしでvimを開いたらNERDTreeを起動、
    "引数ありならNERDTreeは起動せず、引数で渡されたファイルを開く。
    autocmd vimenter * if !argc() | NERDTree | endif

    "他のバッファをすべて閉じた時にNERDTreeが開いていたらNERDTreeも一緒に閉じる。
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
  '''
  [[plugins]]
  repo = 'ryanoasis/vim-devicons'
  [[plugins]]
  repo = 'Xuyuanp/nerdtree-git-plugin'
  [[plugins]]
  repo = 'tiagofumo/vim-nerdtree-syntax-highlight'

  [[plugins]]
  repo ='junegunn/fzf'
  build = './install --all'
  merged =  0

  [[plugins]]
  repo ='junegunn/fzf.vim'
  depends = 'fzf'
  hook_add = '''
    nnoremap <silent> <Leader>f :Ag<CR>
    nnoremap <silent> <Leader>F :GFiles<CR>
    nnoremap <silent> <Leader>gf :GFiles?<CR>
    nnoremap <silent> <Leader>gd :Gdiff<CR>
    nnoremap <silent> <Leader>gsc :Commits<CR>
    nnoremap <silent> <Leader>l :BLines<CR>
    nnoremap <silent> <Leader>h :History<CR>
    nnoremap <silent> <Leader>m :Mark<CR><Paste>
    nnoremap <silent> <Leader>b :Buffer<CR>
  '''

# Git操作
  [[plugins]]
  repo = 'tpope/vim-fugitive'
  hook_add = '''
    nnoremap <silent> <Leader>gc :Gcommit<CR>
  '''

  [[plugins]]
  repo = 'haya14busa/vim-edgemotion'

  [[plugins]]
  repo = "tpope/vim-commentary"

# Ruby
  [[plugins]]
  repo = 'ngmy/vim-rubocop'

# React
  [[plugins]]
  repo = 'pangloss/vim-javascript'
  on_ft = ['javascript', 'javascript.jsx']

  [[plugins]]
  repo = 'maxmellon/vim-jsx-pretty'
  on_ft = ['javascript', 'javascript.jsx']

  [[plugins]]
  repo = 'alampros/vim-styled-jsx'
  on_ft = ['javascript', 'javascript.jsx']

  [[plugins]]
  repo = 'moll/vim-node'
  on_ft = ['javascript'] 
