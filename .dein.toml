  [[plugins]]
  repo = 'Shougo/dein.vim'

# ヘルプ日本語化
  [[plugins]]
  repo = 'vim-jp/vimdoc-ja'

#  [[plugins]]
#  repo = 'Shougo/denite.nvim'
#  hook_add = '''
#    source ~/.config/nvim/plugins/denite.vim 
#  '''

# 選択したコードを実行できる
  [[plugins]]
  repo = 'thinca/vim-quickrun'

  [[plugins]]
  repo = 'editorconfig/editorconfig-vim'
  
  [[plugins]]
  repo = 'majutsushi/tagbar'
  hook_add = '''
    nmap <F8> :TagbarToggle<CR>
  '''
  
  [[plugins]]
  repo = 'vim-airline/vim-airline'
  hook_add = '''
    source ~/.config/nvim/plugins/vim-airline.vim
  '''
  [[plugins]]
  repo = 'vim-airline/vim-airline-themes'

# カッコ系
  [[plugins]]
  repo = 'tpope/vim-endwise'
  [[plugins]]
  repo = 'tpope/vim-surround'
  [[plugins]]
  repo = 'cohama/lexima.vim'

# テーブル系
  [[plugins]]
  repo = 'godlygeek/tabular'
  hook_add = '''
    source ~/.config/nvim/plugins/tabular.vim
  '''
  [[plugins]]
  repo = 'dhruvasagar/vim-table-mode'

#####################################
# 補完機能
#####################################
#  [[plugins]]
#  repo = 'neoclide/coc.nvim'
#  rev = 'release'

# 非同期コードチェッカー
  [[plugins]]
  repo = 'w0rp/ale'

# Syntax checker
  # [[plugins]]
  # repo = 'scrooloose/syntastic'
  # hook_add = '''
  #   set statusline+=%#warningmsg#
  #   set statusline+=%{SyntasticStatuslineFlag()}
  #   set statusline+=%*
  #   let g:syntastic_always_populate_loc_list = 1
  #   let g:syntastic_auto_loc_list = 1
  #   let g:syntastic_check_on_open = 1
  #   let g:syntastic_check_on_wq = 0
  #   let g:syntastic_ruby_checkers=['rubocop', 'mri']
  # '''


#####################################
# Markdown用
#####################################
  [[plugins]]
  repo = 'tyru/open-browser.vim'
  hook_add = '''
    source ~/.config/nvim/plugins/open-browser.vim
  '''
  [[plugins]]
  repo = 'previm/previm'
  on_cmd = 'PrevimOpen'
  depends = 'open-browser.vim'
  hook_add = '''
    source ~/.config/nvim/plugins/previm.vim
  '''
  [[plugins]]
  repo = 'plasticboy/vim-markdown'
  hook_add = '''
    source ~/.config/nvim/plugins/vim-markdown.vim
  '''

# 移動
  [[plugins]]
  repo = 'easymotion/vim-easymotion'
  [[plugins]]
  repo = 'haya14busa/vim-edgemotion'

  [[plugins]]
  repo = 'scrooloose/nerdtree'
  hook_add = '''
    source ~/.config/nvim/plugins/nerdtree.vim
  '''
  [[plugins]]
  repo = 'ryanoasis/vim-devicons'
  [[plugins]]
  repo = 'Xuyuanp/nerdtree-git-plugin'
  [[plugins]]
  repo = 'tiagofumo/vim-nerdtree-syntax-highlight'

  [[plugins]]
  repo ='junegunn/fzf'
  build = './install --all'
  merged =  0
  [[plugins]]
  repo ='junegunn/fzf.vim'
  depends = 'fzf'
  hook_add = '''
    nnoremap <silent> <Leader>s :Ag<CR>
    nnoremap <silent> <Leader>f :GFiles<CR>
    nnoremap <silent> <Leader>l :BLines<CR>
    nnoremap <silent> <Leader>h :History<CR>
    "" nnoremap <silent> <Leader>m :Mark<CR><Paste>
    nnoremap <silent> <Leader>m :Map<CR>
    nnoremap <silent> <Leader>b :Buffer<CR>
  '''

# Git操作
  [[plugins]]
  repo = 'tpope/vim-fugitive'
  hook_add = '''
    nnoremap [GitLeader]    <Nop>
    nmap     <Space>g [GitLeader]

    nnoremap <silent> [GitLeader]c :Gcommit<CR>
    nnoremap <silent> [GitLeader]f :GFiles?<CR>
    nnoremap <silent> [GitLeader]d :Gdiff<CR>
    nnoremap <silent> [GitLeader]C :Commits<CR>
    nnoremap <silent> [GitLeader]l :Git log<CR>
  '''

  [[plugins]]
  repo = "tpope/vim-commentary"

  [[plugins]]
  repo = 'mbbill/undotree'
  hook_add = '''
    let g:undotree_WindowLayout = 4
    let g:undotree_SetFocusWhenToggle = 1
    nnoremap <Leader>r :UndotreeToggle<CR>
  '''

## LSP関連
  [[plugins]]
  repo = 'prabirshrestha/asyncomplete.vim'
  [[plugins]]
  repo =  'prabirshrestha/asyncomplete-lsp.vim'
  [[plugins]]
  repo =  'prabirshrestha/vim-lsp'
  hook_add = '''
    source ~/.config/nvim/plugins/vim-lsp.vim
  '''
  [[plugins]]
  repo =  'mattn/vim-lsp-settings'
  [[plugins]]
  repo =  'mattn/vim-lsp-icons'
  [[plugins]]
  repo =  'hrsh7th/vim-vsnip'
  [[plugins]]
  repo =  'hrsh7th/vim-vsnip-integ'

## 翻訳
  [[plugins]]
  repo = 'skanehira/translate.vim'
  hook_add = '''
    let g:translate_source = "en"
    let g:translate_target = "ja"
  " let g:translate_popup_window = 0 " if you want use popup window, set value 1
    let g:translate_winsize = 10 " set buffer window height size if you doesn't use popup window

    nnoremap <silent> <Leader>t :Translate<CR>
    nnoremap <silent> <Leader>T :!Translate<CR>
    vnoremap <silent> <Leader>t :Translate<CR>
    vnoremap <silent> <Leader>T :!Translate<CR>

    nnoremap <silent> <Esc><Esc><Esc> :bw translate://result<CR>
  '''
